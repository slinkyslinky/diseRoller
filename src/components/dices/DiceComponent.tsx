import React, { ReactElement } from 'react'
import { Dice, System } from '../../types/types'
import { getDiceForm } from '../../utils/getDiceForm'
import { getImg } from '../../utils/getImg'
import './Dice.scss'

type Props = {
   dice: Dice,
   size?: string,
   onClick: any,
   onRightClick?: any,
   system?: System,
}

export default function DiceComponent({ dice, size, onClick, onRightClick, system }: Props) {

   const color = `dice--${dice.color}`

   function onContextMenu(e: any) {
      e.preventDefault()
      onRightClick(e.currentTarget)
   }

   if (size === "little") {
      return (
         <button className={'dice little-dice'} onClick={() => onClick(dice)}>
            <svg viewBox="0 0 120 120" fill="none" xmlns="http://www.w3.org/2000/svg">
               {getForm(getDiceForm(dice.weight))}
            </svg>
         </button>
      )
   } else {
      return (
         <button className={'dice big-dice'} data-number={dice.order} onClick={() => onClick(dice)} onContextMenu={(e) => onContextMenu(e)}>
            <svg viewBox="0 0 120 120" fill="none" xmlns="http://www.w3.org/2000/svg">
               {getForm(getDiceForm(dice.weight))}

            </svg>
            {getImg(dice.value, system?.name)}
         </button>
      )
   }





   function getForm(weight: string): ReactElement {
      switch (weight) {
         case "d4": return (
            <path d="M65.5859 19.675L102.912 84.325C104.044 86.2858 104.84 87.6686 105.345 88.7589C105.853 89.8565 105.957 90.4395 105.92 90.8294C105.824 91.8424 105.292 92.7635 104.463 93.353C104.144 93.5798 103.587 93.7818 102.382 93.8905C101.186 93.9985 99.5898 94 97.3257 94H22.6743C20.4102 94 18.8143 93.9985 17.6176 93.8905C16.413 93.7818 15.8565 93.5798 15.5373 93.353C14.7079 92.7635 14.176 91.8424 14.0803 90.8294C14.0434 90.4395 14.1468 89.8565 14.6549 88.759C15.1597 87.6686 15.9564 86.2858 17.0884 84.325L54.4141 19.675C55.5462 17.7142 56.3454 16.3329 57.0373 15.3505C57.7337 14.3617 58.187 13.9807 58.543 13.8177C59.4682 13.3941 60.5318 13.3941 61.457 13.8177C61.813 13.9807 62.2663 14.3617 62.9627 15.3505C63.6546 16.3329 64.4538 17.7142 65.5859 19.675Z" className={color} strokeWidth="3" />
         )
         case "d8":
            return (
               <path d="M65.4623 12.3241L101.629 55.8795C102.385 56.7904 102.9 57.4121 103.268 57.9282C103.626 58.4292 103.781 58.7459 103.861 59.0189C104.048 59.6596 104.048 60.3404 103.861 60.9811C103.781 61.2541 103.626 61.5708 103.268 62.0718C102.9 62.5879 102.385 63.2096 101.629 64.1205L65.4623 107.676C64.4068 108.947 63.6751 109.826 63.0565 110.453C62.4471 111.071 62.0582 111.326 61.7326 111.449C60.9381 111.748 60.0619 111.748 59.2674 111.449C58.9418 111.326 58.5529 111.071 57.9435 110.453C57.3249 109.826 56.5932 108.947 55.5377 107.676L19.3712 64.1205C18.6148 63.2096 18.0998 62.5879 17.7318 62.0718C17.3744 61.5708 17.2191 61.2541 17.1393 60.9811C16.9523 60.3404 16.9523 59.6596 17.1393 59.0189C17.2191 58.7459 17.3744 58.4292 17.7318 57.9282C18.0998 57.4121 18.6148 56.7904 19.3712 55.8795L55.5377 12.3241C56.5932 11.053 57.3249 10.1739 57.9435 9.54662C58.5529 8.92864 58.9418 8.67353 59.2674 8.55103C60.0619 8.25203 60.9381 8.25203 61.7326 8.55103C62.0582 8.67353 62.4471 8.92864 63.0565 9.54662C63.6751 10.1739 64.4068 11.053 65.4623 12.3241Z" className={color} strokeWidth="3" />
            )
         case "d10":
            return (
               <path d="M64.6052 14.3322L101.155 44.4921C102.268 45.4104 102.607 45.7055 102.846 46.0401C103.092 46.3837 103.274 46.769 103.382 47.1773C103.488 47.5749 103.5 48.0242 103.5 49.4671V70.5329C103.5 71.9757 103.488 72.4251 103.382 72.8227C103.274 73.231 103.092 73.6163 102.846 73.9599C102.607 74.2945 102.268 74.5896 101.155 75.5079L64.6052 105.668C63.6972 106.417 63.0776 106.927 62.5634 107.292C62.0643 107.645 61.7489 107.799 61.4769 107.878C60.8388 108.064 60.1612 108.064 59.5231 107.878C59.2511 107.799 58.9357 107.645 58.4366 107.292C57.9224 106.927 57.3028 106.417 56.3948 105.668L19.8448 75.5079C18.732 74.5896 18.3929 74.2945 18.1535 73.9599C17.9077 73.6163 17.7261 73.231 17.6175 72.8227C17.5118 72.4251 17.5 71.9757 17.5 70.5329V49.4671C17.5 48.0242 17.5118 47.5749 17.6175 47.1773C17.7261 46.769 17.9077 46.3837 18.1535 46.0401C18.3929 45.7055 18.732 45.4104 19.8448 44.4921L56.3948 14.3322C57.3028 13.583 57.9224 13.0729 58.4366 12.7084C58.9357 12.3546 59.2511 12.2006 59.5231 12.1216C60.1612 11.9361 60.8388 11.9361 61.4769 12.1216C61.7489 12.2006 62.0643 12.3546 62.5634 12.7084C63.0776 13.0729 63.6972 13.583 64.6052 14.3322Z" className={color} strokeWidth="3" />

            )
         case "d12":
            return (
               <path d="M63.7912 14.6086L101.998 42.3676C103.762 43.6494 104.3 44.0705 104.618 44.5651C104.945 45.0734 105.135 45.6577 105.169 46.2612C105.203 46.8483 105.015 47.505 104.341 49.5789L89.7476 94.494C89.0737 96.5679 88.8393 97.2094 88.4673 97.6648C88.085 98.133 87.5879 98.4941 87.0245 98.7131C86.4764 98.9262 85.7939 98.9509 83.6133 98.9509H36.3867C34.2061 98.9509 33.5236 98.9262 32.9755 98.7131C32.4121 98.4941 31.915 98.133 31.5327 97.6648C31.1607 97.2094 30.9263 96.5679 30.2524 94.494L15.6586 49.5789C14.9848 47.505 14.7974 46.8483 14.8306 46.2612C14.8648 45.6577 15.0546 45.0734 15.3817 44.5651C15.6999 44.0705 16.2376 43.6494 18.0017 42.3676L56.2088 14.6086C57.973 13.3268 58.5396 12.9457 59.1083 12.7958C59.6928 12.6418 60.3072 12.6418 60.8917 12.7958C61.4604 12.9457 62.027 13.3268 63.7912 14.6086Z" className={color} strokeWidth="3" />
            )
         case "d20":
            return (
               <path d="M63.225 13.594L98.5763 34.0041C100.095 34.881 100.561 35.1692 100.89 35.5312C101.228 35.9031 101.483 36.3436 101.636 36.8226C101.784 37.289 101.801 37.8361 101.801 39.5899V80.4101C101.801 82.1639 101.784 82.711 101.636 83.1774C101.483 83.6564 101.228 84.0969 100.89 84.4688C100.561 84.8308 100.095 85.119 98.5763 85.9959L63.225 106.406C61.7061 107.283 61.2239 107.542 60.7456 107.646C60.2543 107.753 59.7457 107.753 59.2544 107.646C58.7761 107.542 58.2939 107.283 56.775 106.406L21.4237 85.9959C19.9048 85.119 19.4395 84.8308 19.11 84.4688C18.7716 84.0969 18.5173 83.6564 18.3644 83.1774C18.2156 82.711 18.1987 82.1639 18.1987 80.4101L18.1987 39.5899C18.1987 37.8361 18.2156 37.289 18.3644 36.8226C18.5173 36.3436 18.7716 35.9031 19.11 35.5312C19.4395 35.1692 19.9048 34.881 21.4237 34.0041L56.775 13.594C58.2939 12.7171 58.7761 12.4581 59.2544 12.3538C59.7457 12.2467 60.2543 12.2467 60.7456 12.3538C61.2239 12.4581 61.7061 12.7171 63.225 13.594Z" className={color} strokeWidth="3" />
            )
         case "d6":
         default:
            return (
               <rect x="25.5" y="25.5" width="68" height="68" rx="3.5" className={color} strokeWidth="3" />
            )
      }
   }


}
